// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ZodiacSignLibrary.Models;

#nullable disable

namespace ZodiacSignLibrary.Migrations
{
    [DbContext(typeof(ZodiacSignDbContext))]
    partial class ZodiacSignDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("ZodiacSignLibrary.Models.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailAdmin")
                        .HasColumnType("text");

                    b.Property<string>("LoginAdmin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameAdmin")
                        .HasColumnType("text");

                    b.Property<string>("PasswordAdmin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SurnameAdmin")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Admin", "public");
                });

            modelBuilder.Entity("ZodiacSignLibrary.Models.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailClient")
                        .HasColumnType("text");

                    b.Property<string>("LoginClient")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameClient")
                        .HasColumnType("text");

                    b.Property<string>("PasswordClient")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SurnameClient")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Client", "public");
                });

            modelBuilder.Entity("ZodiacSignLibrary.Models.Entities.Services", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CityOfBirth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeliveryEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeOnly>("TimeOfBirth")
                        .HasColumnType("time without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Services", "public");
                });

            modelBuilder.Entity("ZodiacSignLibrary.Models.Entities.ZodiacSignInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("SignInfo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SignName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ZodiacSignInfo", "public");
                });

            modelBuilder.Entity("ZodiacSignLibrary.Models.Entities.Services", b =>
                {
                    b.HasOne("ZodiacSignLibrary.Models.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });
#pragma warning restore 612, 618
        }
    }
}
